{"version":3,"sources":["constants.js","components/addCardForm/AddCardForm.jsx","components/addCardForm/container.js","actions.js","components/sortMenu/SortMenu.jsx","components/sortMenu/container.js","lib/array-helpers.js","lib/time-helpers.js","components/ui/TimeAgo.js","components/cardList/components/card/Card.jsx","components/cardList/CardList.jsx","components/cardList/container.js","components/App.js","store/reducers.js","store/index.js","index.js"],"names":["SORTED_BY","constants","ADD_CARD","SAVE_CARD","EDIT_CARD","REMOVE_CARD","SORT_CARDS","SORT_CARDS_DESC_TOGGLE","MOVE_CARD","TOGGLE_DONE_CARD","AddCardForm","_ref","_title","_description","_ref$onNewCard","onNewCard","f","react_default","a","createElement","className","onSubmit","e","preventDefault","value","focus","ref","input","type","placeholder","required","rows","connect","dispatch","title","description","C","id","v4","list","isEdit","timestamp","Date","toString","addCard","ui","options","date","SortMenu","_ref$field","field","_ref$isDesc","isDesc","_ref$onSelect","onSelect","Object","keys","map","item","i","key","href","onClick","style","visibility","state","sort","sortBy","b","sortFunction","arguments","length","undefined","sortByWithDesc","timeframe","second","minute","hour","day","breakpoints","toDate","timeStampString","checkDate","diff","timeframeName","underTime","time","isUnderTime","result","concat","printResult","Math","floor","diffOverTimeframe","checkNext","now","_ref2","toArray","tfName","rest","slice","callback","timeString","match","_checkNext","getDiff","howLongAgo","remainingTimeframe","dateTime","getMonth","getDate","getFullYear","TimeAgo","ago","Card","_ref$isDone","isDone","_ref$isEdit","onRemove","onToggleDone","onEdit","onSave","defaultValue","ui_TimeAgo","fa","defaultProps","CardList","_ref$colors","colors","_ref$onRemove","_ref$onToggleDone","_ref$onEdit","_ref$onSave","color","components_card_Card","assign","toConsumableArray","removeCard","toggleDoneCard","editCard","saveCard","App","sortMenu_container","container","cardList_container","action","objectSpread","c","filter","logger","store","next","console","groupCollapsed","log","getState","groupEnd","saver","localStorage","JSON","stringify","applyMiddleware","createStore","combineReducers","parse","stateData","window","__REDUX_DEVTOOLS_EXTENSION__","storeFactory","React","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5a5fb9c2.chunk.js","sourcesContent":["const constants = {\r\n  ADD_CARD: \"ADD_CARD\",\r\n  SAVE_CARD: \"SAVE_CARD\",\r\n  EDIT_CARD: \"EDIT_CARD\",\r\n  REMOVE_CARD: \"REMOVE_CARD\",\r\n  SORT_CARDS: \"SORT_CARDS\",\r\n  SORT_CARDS_DESC_TOGGLE: \"SORT_CARDS_DESC_TOGGLE\",\r\n  MOVE_CARD: \"MOVE_CARD\",\r\n  TOGGLE_DONE_CARD: \"TOGGLE_DONE_CARD\",\r\n}\r\n\r\nexport const SORTED_BY = {\r\n  DATE: \"date\",\r\n  TITLE: 'title',\r\n  DESCRIPTION: 'description',\r\n}\r\n\r\nexport default constants","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './AddCardForm.scss'\r\n\r\nconst AddCardForm = ({onNewCard: onNewCard = f => f}) => {\r\n\r\n  let _title, _description\r\n\r\n  const submit = e => {\r\n    e.preventDefault()\r\n    onNewCard(_title.value, _description.value)\r\n    _title.value = ''\r\n    _description.value = ''\r\n    _title.focus()\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className=\"add-card\"\r\n      onSubmit={submit}\r\n    >\r\n      <input ref={input => _title = input}\r\n             type=\"text\"\r\n             placeholder=\"Card title\"\r\n             required\r\n      />\r\n      <textarea\r\n        ref={input => _description = input}\r\n        placeholder=\"Card description\"\r\n        rows=\"4\"\r\n        required\r\n      />\r\n      <button>ADD</button>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nAddCardForm.propTypes = {\r\n  onNewCard: PropTypes.func\r\n}\r\n\r\nexport default AddCardForm\r\n","import connect from 'react-redux/es/connect/connect';\r\nimport {addCard} from '../../actions';\r\nimport ui from './AddCardForm';\r\n\r\nexport default connect(\r\n  null,\r\n  dispatch =>\r\n    ({\r\n      onNewCard(title, description) {\r\n        dispatch(addCard(title, description))\r\n      }\r\n    })\r\n)(ui)","import C from './constants'\r\nimport {v4} from 'uuid'\r\n\r\nexport const addCard = (title, description) =>\r\n  ({\r\n    type: C.ADD_CARD,\r\n    id: v4(),\r\n    title,\r\n    description,\r\n    list: 'todo',\r\n    isEdit: false,\r\n    timestamp: new Date().toString(),\r\n  })\r\n\r\nexport const removeCard = id =>\r\n  ({\r\n    type: C.REMOVE_CARD,\r\n    id,\r\n  })\r\n\r\nexport const moveCard = (id, list) =>\r\n  ({\r\n    type: C.MOVE_CARD,\r\n    id,\r\n    list,\r\n  })\r\n\r\nexport const toggleDoneCard = (id) =>\r\n  ({\r\n    type: C.TOGGLE_DONE_CARD,\r\n    id,\r\n  })\r\n\r\nexport const editCard = (id) =>\r\n  ({\r\n    type: C.EDIT_CARD,\r\n    id,\r\n  })\r\n\r\nexport const saveCard = (id, title, description) =>\r\n  ({\r\n    type: C.SAVE_CARD,\r\n    id,\r\n    title,\r\n    description,\r\n  })\r\n\r\nexport const sortCards = field =>\r\n  ({\r\n    type: C.SORT_CARDS,\r\n    field,\r\n  })\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './SortMenu.scss'\r\nimport {SORTED_BY} from '../../constants';\r\n\r\nconst options = {\r\n  date: SORTED_BY.DATE,\r\n  title: SORTED_BY.TITLE,\r\n  description: SORTED_BY.DESCRIPTION,\r\n}\r\n\r\nconst SortMenu = ({\r\n  field = SORTED_BY.DATE,\r\n  isDesc = false,\r\n  onSelect = f => f\r\n}) => {\r\n  return <nav className=\"menu\">\r\n    <h1>Sort Colors</h1>\r\n    {Object.keys(options).map((item, i) =>\r\n      <a\r\n         key={i}\r\n         href=\"#\"\r\n         className={(field === options[item]) ? \"selected\" : null}\r\n         onClick={e => {\r\n           e.preventDefault()\r\n           onSelect(options[item])\r\n         }}\r\n      >\r\n        <span>{item}</span>\r\n        <span style={{visibility: field === options[item] ? '' : 'hidden'}}>{\r\n          isDesc\r\n            ? '↑'\r\n            : '↓'\r\n        }</span>\r\n      </a>\r\n    )}\r\n  </nav>\r\n}\r\n\r\nSortMenu.propTypes = {\r\n  field: PropTypes.string,\r\n  isDesc: PropTypes.bool,\r\n  onSelect: PropTypes.func\r\n}\r\n\r\nexport default SortMenu\r\n","import connect from 'react-redux/es/connect/connect';\r\nimport {sortCards} from '../../actions';\r\nimport ui from './SortMenu';\r\n\r\nexport default connect(\r\n  state =>\r\n    ({\r\n      field: state.sort.field,\r\n      isDesc: state.sort.isDesc,\r\n    }),\r\n  dispatch =>\r\n    ({\r\n      onSelect(sortBy) {\r\n        dispatch(sortCards(sortBy))\r\n      }\r\n    })\r\n)(ui)","import {SORTED_BY} from '../constants';\r\n\r\nexport const sortBy = (isDesc) => (type, field) => {\r\n  switch (type) {\r\n    case \"date\" :\r\n      return (a, b) =>\r\n        isDesc\r\n        ? new Date(a[field]) - new Date(b[field])\r\n        : new Date(b[field]) - new Date(a[field]);\r\n    case \"string\" :\r\n      return (a, b) => (\r\n        isDesc\r\n          ? a[field] > b[field]\r\n          : a[field] < b[field]\r\n      ) ? -1 : 1;\r\n    default:\r\n      return (a, b) =>\r\n        isDesc\r\n          ? a[field] - b[field]\r\n          : b[field] - a[field];\r\n  }\r\n}\r\n\r\nexport const sortFunction = (sort, isDesc = false) => {\r\n  const sortByWithDesc = sortBy(isDesc);\r\n  return (sort === SORTED_BY.TITLE)\r\n    ? sortByWithDesc(\"string\", SORTED_BY.TITLE)\r\n    : (sort === SORTED_BY.DESCRIPTION)\r\n      ? sortByWithDesc(\"string\", SORTED_BY.DESCRIPTION)\r\n      : sortByWithDesc(\"date\", \"timestamp\")\r\n  }","const second = 1000,\r\n    minute = 60 * second,\r\n    hour = 60 * minute,\r\n    day = 24 * hour,\r\n    timeframe = {second, minute, hour, day},\r\n    breakpoints = {\r\n        second: 60,\r\n        minute: 60,\r\n        hour: 24,\r\n        day: 30\r\n    }\r\n\r\nconst toDate = timeStampString => new Date(timeStampString)\r\n\r\nconst getDiff = (timestamp, now) => toDate(now) - toDate(timestamp)\r\n\r\nconst isUnderTime = (diff, timeframe, time) => diff / timeframe < time\r\n\r\nconst diffOverTimeframe = (diff, timeframe) => Math.floor(diff/timeframe)\r\n\r\nconst printResult = (result, timeframeName) =>\r\n    `${result} ${timeframeName + ((result > 1) ? \"s\" : \"\")}`\r\n\r\nconst checkDate = (diff, timeframeName, underTime, timeframe) =>\r\n    (isUnderTime(diff, timeframe[timeframeName], underTime)) ?\r\n        printResult(diffOverTimeframe(diff,timeframe[timeframeName]), timeframeName) :\r\n        null\r\n\r\nconst printFullDate = dateTime =>\r\n    `${dateTime.getMonth() + 1}/${dateTime.getDate()}/${dateTime.getFullYear()}`\r\n\r\nconst lessThanAMinute = timeString =>\r\n    (timeString.match(/seconds/)) ?\r\n        \"less than a minute\" :\r\n    timeString + ' ago'\r\n\r\nconst _checkNext = (result, callback) =>\r\n    (result) ?\r\n        lessThanAMinute(result) :\r\n        callback()\r\n\r\nconst checkNext = ([tfName, ...rest], timeframe, timestamp, now) =>\r\n    _checkNext(\r\n        checkDate(getDiff(timestamp, now), tfName, breakpoints[tfName], timeframe),\r\n        () => howLongAgo(rest, timeframe, timestamp, now)\r\n    )\r\n\r\nconst howLongAgo = (remainingTimeframe, timeframe, timestamp, now) =>\r\n    (!remainingTimeframe.length) ?\r\n        printFullDate(toDate(timestamp)) :\r\n        checkNext(remainingTimeframe, timeframe, timestamp, now)\r\n\r\nexport const ago = (timestamp, now = new Date().toString()) =>\r\n    howLongAgo(Object.keys(timeframe), timeframe, timestamp, now)","import React from 'react'\r\nimport { ago } from '../../lib/time-helpers'\r\n\r\nconst TimeAgo = ({timestamp}) => {\r\n    return <div className=\"time-ago\">\r\n        { ago(timestamp) }\r\n    </div>\r\n}\r\n\r\nexport default TimeAgo","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TimeAgo from '../../../ui/TimeAgo'\r\nimport {FaTrash, FaCheck, FaRedo, FaEdit, FaSave} from 'react-icons/fa'\r\nimport './Card.scss'\r\n\r\nconst Card = ({\r\n  id, title, description, timestamp, isDone = false, isEdit = false,\r\n  onRemove, onToggleDone, onEdit, onSave\r\n}) => {\r\n  let className = \"card\"\r\n  className += isDone ? ' done' : ''\r\n\r\n  let _title, _description;\r\n\r\n  const submit = () => {\r\n    onSave(_title.value, _description.value)\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={className}\r\n    >\r\n      <div className=\"add-card\">\r\n       { isEdit\r\n          ? <input\r\n            ref={input => _title = input}\r\n            type=\"text\"\r\n            defaultValue={title}\r\n          />\r\n          : <h1>{title}</h1>\r\n        }\r\n        {\r\n          isEdit\r\n            ? <textarea\r\n              ref={input => _description = input}\r\n              className=\"description\"\r\n              defaultValue={description}\r\n            />\r\n            : <pre\r\n              className=\"description\"\r\n            >\r\n              {description}\r\n            </pre>\r\n        }\r\n      </div>\r\n      <div className=\"bottom-panel\">\r\n        <TimeAgo timestamp={timestamp}/>\r\n        <div className=\"buttons\">\r\n          { isEdit\r\n            ? <button\r\n              onClick={submit}\r\n              className=\"edit\"\r\n            >\r\n              <FaSave/>\r\n            </button>\r\n            : <button\r\n              onClick={onEdit}\r\n              className=\"edit\"\r\n            >\r\n              <FaEdit/>\r\n            </button>\r\n          }\r\n          <button\r\n            onClick={onToggleDone}\r\n            className=\"check\"\r\n          >\r\n            {isDone ? <FaRedo/> : <FaCheck/>}\r\n          </button>\r\n          <button\r\n            onClick={onRemove}\r\n            className=\"remove\"\r\n          >\r\n            <FaTrash/>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  isDone: PropTypes.bool,\r\n  isEdit: PropTypes.bool,\r\n\r\n  onRemove: PropTypes.func,\r\n  onToggleDone: PropTypes.func,\r\n  onEdit: PropTypes.func,\r\n  onSave: PropTypes.func,\r\n}\r\n\r\nCard.defaultProps = {\r\n  onRemove: f => f,\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Card from './components/card/Card'\r\nimport './CardList.scss'\r\n\r\nconst CardList = ({\r\n  colors = [],\r\n  onRemove = f => f,\r\n  onToggleDone = f => f,\r\n  onEdit = f => f,\r\n  onSave = f => f,\r\n}) =>\r\n  <div className=\"card-list\">\r\n    {(colors.length === 0) ?\r\n      <p>No Cards Listed. (Add a Card)</p> :\r\n      colors.map(color =>\r\n        <Card\r\n          key={color.id}\r\n          {...color}\r\n          isDone={color.list === 'done'}\r\n          onRemove={() => onRemove(color.id)}\r\n          onToggleDone={() => onToggleDone(color.id)}\r\n          onEdit={() => onEdit(color.id)}\r\n          onSave={(title, description) => onSave(color.id, title, description)}\r\n        />\r\n      )\r\n    }\r\n  </div>\r\n\r\nCardList.propTypes = {\r\n  colors: PropTypes.array,\r\n  onRemove: PropTypes.func,\r\n  onToggleDone: PropTypes.func,\r\n  onEdit: PropTypes.func,\r\n  onSave: PropTypes.func,\r\n}\r\n\r\nexport default CardList\r\n","import connect from 'react-redux/es/connect/connect';\r\nimport {sortFunction, sortBy} from '../../lib/array-helpers';\r\nimport {removeCard, toggleDoneCard, editCard, saveCard} from '../../actions';\r\nimport ui from './CardList';\r\n\r\nexport default connect(\r\n  state =>\r\n    ({\r\n      colors: [...state.colors]\r\n        .sort(sortFunction(state.sort.field, state.sort.isDesc))\r\n        .sort(sortBy(true)('string', 'list'))\r\n    }),\r\n  dispatch =>\r\n    ({\r\n      onRemove(id) {\r\n        dispatch(removeCard(id))\r\n      },\r\n      onToggleDone(id) {\r\n        dispatch(toggleDoneCard(id))\r\n      },\r\n      onEdit(id) {\r\n        dispatch(editCard(id))\r\n      },\r\n      onSave(id, title, description) {\r\n        dispatch(saveCard(id, title, description))\r\n      }\r\n    })\r\n)(ui)","import React from 'react';\r\nimport AddCardForm from './addCardForm/container';\r\nimport SortMenu from './sortMenu/container';\r\nimport CardList from './cardList/container';\r\n\r\nimport './ui/APP.scss'\r\n\r\nconst App = () =>\r\n  <div className=\"app\">\r\n    <SortMenu/>\r\n    <AddCardForm/>\r\n    <CardList/>\r\n  </div>\r\n\r\nexport default App","import C, {SORTED_BY} from '../constants'\r\n\r\nexport const color = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case C.ADD_CARD:\r\n      return {\r\n        id: action.id,\r\n        title: action.title,\r\n        description: action.description,\r\n        timestamp: action.timestamp,\r\n        list: action.list,\r\n        isEdit: action.isEdit,\r\n      }\r\n    case C.MOVE_CARD:\r\n      return (state.id !== action.id) ?\r\n        state :\r\n        {\r\n          ...state,\r\n          list: action.list\r\n        }\r\n    case C.SAVE_CARD:\r\n      return (state.id !== action.id) ?\r\n        state :\r\n        {\r\n          ...state,\r\n          title: action.title,\r\n          description: action.description,\r\n          isEdit: false,\r\n        }\r\n    case C.EDIT_CARD:\r\n      return (state.id !== action.id) ?\r\n        state :\r\n        {\r\n          ...state,\r\n          isEdit: true,\r\n        }\r\n    case C.TOGGLE_DONE_CARD:\r\n      return (state.id !== action.id) ?\r\n        state :\r\n        {\r\n          ...state,\r\n          list: state.list === 'todo' ? 'done' : 'todo'\r\n        }\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nexport const colors = (state = [], action) => {\r\n  switch (action.type) {\r\n    case C.ADD_CARD :\r\n      return [\r\n        ...state,\r\n        color({}, action)\r\n      ]\r\n    case C.MOVE_CARD:\r\n      return state.map(\r\n        c => color(c, action)\r\n      )\r\n    case C.SAVE_CARD:\r\n      return state.map(\r\n        c => color(c, action)\r\n      )\r\n    case C.EDIT_CARD:\r\n      return state.map(\r\n        c => color(c, action)\r\n      )\r\n    case C.TOGGLE_DONE_CARD :\r\n      return state.map(\r\n        c => color(c, action)\r\n      )\r\n    case C.REMOVE_CARD :\r\n      return state.filter(\r\n        c => c.id !== action.id\r\n      )\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const sort = (\r\n  state = {\r\n    field: SORTED_BY.DATE,\r\n    isDesc: false,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case C.SORT_CARDS:\r\n      return {\r\n        ...state,\r\n        field: action.field,\r\n        isDesc: action.field === state.field ? !state.isDesc : state.isDesc,\r\n      }\r\n    case C.SORT_CARDS_DESC_TOGGLE:\r\n      return {\r\n        ...state,\r\n        isDesc: !state.isDesc,\r\n      }\r\n    default :\r\n      return state\r\n  }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { colors, sort } from './reducers'\r\nimport stateData from '../data/initialState'\r\n\r\nconst logger = store => next => action => {\r\n    let result\r\n    console.groupCollapsed(\"dispatching\", action.type)\r\n    console.log('prev state', store.getState())\r\n    console.log('action', action)\r\n    result = next(action)\r\n    console.log('next state', store.getState())\r\n    console.groupEnd()\r\n    return result\r\n}\r\n\r\nconst saver = store => next => action => {\r\n    let result = next(action)\r\n    localStorage['redux-store'] = JSON.stringify(store.getState())\r\n    return result\r\n}\r\n\r\nconst storeFactory = (initialState=stateData) =>\r\n    applyMiddleware(logger, saver)(createStore)(\r\n        combineReducers({colors, sort}),\r\n        (localStorage['redux-store']) ?\r\n            JSON.parse(localStorage['redux-store']) :\r\n            stateData,\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n\r\nexport default storeFactory","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport {Provider} from 'react-redux'\r\nimport App from './components/App'\r\nimport storeFactory from './store'\r\n\r\nconst store = storeFactory()\r\n\r\nconsole.log('version:', '0.1.0')\r\n\r\nwindow.React = React\r\nwindow.store = store\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}